use std::str::FromStr;
use dotenv::dotenv;
use alloy::{
  providers::ProviderBuilder, 
  sol, 
  transports::http::reqwest::Url, 
  network::EthereumWallet,
  signers::local::PrivateKeySigner,
};
use eyre::Result;

sol! {
    #[allow(missing_docs)]
    // solc v0.8.28; solc src/sol/Inbox.sol --via-ir --optimize --bin
    #[sol(rpc, bytecode="608080604052346015576103a5908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c9081634972134a14610334575080635d47964b146102f6578063b4c924d0146101575763fd23797214610048575f80fd5b3461013f57604036600319011261013f5760243567ffffffffffffffff811161013f573660238201121561013f5780600401359067ffffffffffffffff821161014357604051916100a3601f8201601f19166020018461034d565b808352366024828401011161013f575f9281602460209401848301370101526004355f52600160205260405f206040519081602082549182815201915f5260205f20905f5b818110610129576100fb8585038661034d565b7f1314e2f660aa082153647cd3e7f838d7c61acf4efd72f449715fae60d6868b6960205f54604051908152a1005b82548452602090930192600192830192016100e8565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b3461013f57602036600319011261013f5760043567ffffffffffffffff811161013f573660238201121561013f57806004013567ffffffffffffffff8111610143578060051b91604051916101af602085018461034d565b825260208201602481948301019136831161013f57602401905b8282106102e6575050505f545f52600160205260405f2081519067ffffffffffffffff8211610143576801000000000000000082116101435780548282558083106102c0575b5083905f5260205f205f5b8381106102ac5785855f549160405191604083019084845260406020850152518091526060830191905f5b81811061029657857f0a46d5a20b8977409475e054bd67a2a5b0e285f3c6c233ce4d8b90ebcf8d919186860387a15f198114610282576001015f55005b634e487b7160e01b5f52601160045260245ffd5b8251845260209384019390920191600101610245565b60019060208451940193818401550161021a565b815f528260205f2091820191015b8181106102db575061020f565b5f81556001016102ce565b81358152602091820191016101c9565b3461013f57604036600319011261013f576024356004355f52600160205260405f2090815481101561013f576020915f52815f200154604051908152f35b3461013f575f36600319011261013f576020905f548152f35b90601f8019910116810190811067ffffffffffffffff8211176101435760405256fea264697066735822122045af1ecb03af68a0889a3deb9215d8a335555a5fcd64e15d2688649dd9671b4c64736f6c634300081c0033")]
    contract Inbox {}
}

#[tokio::main]
async fn main() -> Result<()> {
  dotenv().ok(); 
  let pk = &std::env::var("PRIVATE_KEY").unwrap();
  let signer: PrivateKeySigner = PrivateKeySigner::from_str(pk).unwrap();
  let wallet = EthereumWallet::from(signer);
  let url = Url::from_str("https://ethereum-sepolia-rpc.publicnode.com").unwrap();
  let provider = ProviderBuilder::new()
    .wallet(wallet)
    .on_http(url);

  // sepolia contract: 0xdB8eB6D1d24c312DBdd3fDc01B37dD2862D6C391.
  let contract = Inbox::deploy(&provider).await?;

  println!("Deployed contract at address: {}", contract.address());
  Ok(())
}